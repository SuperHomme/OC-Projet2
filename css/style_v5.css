/* --------------------- AUTRES */
#conteneur {
	font-family: HelveticaNeue, RobotoLight;
	width:50%;
	margin:auto;
	background-color: red;
	border-color: black;
	border: grey solid 0.05rem;
	border-radius: 5px;
	box-shadow: 5px 5px 10px grey;
	color: #424949;
	font-size: 0.8rem;
}

h1, h2, #nom {
	text-transform: uppercase;
	text-align: left;
}

/* FONTS : https://www.smashingmagazine.com/2013/02/setting-weights-and-styles-at-font-face-declaration/ */

@font-face { /* regular */
    font-family: 'HelveticaNeue';
    src: url('../font/HelveticaNeue/HelveticaNeue-Regular-02.ttf') format('truetype');
    src: url('../font/HelveticaNeue/HelveticaNeue-Regular-02.woff') format('woff');
    src: url('../font/HelveticaNeue/HelveticaNeue-Regular-02.otf') format('opentype');
    font-weight: normal;
    font-style: normal;
}

@font-face { /* medium */
    font-family: 'HelveticaNeue';
    src: url('../font/HelveticaNeue/HelveticaNeue-Medium-11.ttf') format('truetype');
    font-weight: bold;
}

@font-face { /* bold */
    font-family: 'HelveticaNeue';
    src: url('../font/HelveticaNeue/HelveticaNeue-Bold-01.ttf') format('truetype');
    font-weight: bolder;
}

@font-face { /* regular italic */
    font-family: 'HelveticaNeue';
    src: url('../font/HelveticaNeue/HelveticaNeue-Italic-04.ttf') format('truetype');
    font-style: italic; /* oblique et italique ne peuvent être séparé par une virgule depuis CSS3 */
}

@font-face { /* regular oblique */
    font-family: 'HelveticaNeue';
    src: url('../font/HelveticaNeue/HelveticaNeue-Italic-04.ttf') format('truetype');
    font-style: oblique;
}

@font-face { /* light */
    font-family: 'HelveticaNeue';
    src: url('../font/HelveticaNeue/HelveticaNeue-Light-05.ttf') format('truetype');
    font-weight: lighter;
}

@font-face {
    font-family: 'RobotoLight';
    src: url('../font/RobotoLight/Roboto-Light-webfont.eot');
    src: url('../font/RobotoLight/Roboto-Light-webfont.eot?#iefix') format('embedded-opentype'),
         url('../font/RobotoLight/Roboto-Light-webfont.woff') format('woff'),
         url('../font/RobotoLight/Roboto-Light-webfont.ttf') format('truetype'),
         url('../font/RobotoLight/Roboto-Light-webfont.svg#robotolight') format('svg');
    font-weight: normal;
    font-style: normal;
}

.font-medium {
	font-weight: bolder; /* bold ou bolder : il utilise la meme, ce n'est donc pas compris par le CSS */
	}

.font-light {
	font-weight: lighter; /* ne marche oas : tjr regular */
}

.maincolor {
	color: #C0392B;
}


/* --------------------- HEADER */
header {
	display: flex;
	flex-direction: row-reverse; /* le "entete" est avant le "portrait", d'où la nécéssité de les inverser */
	width: 100%;
	background-color: green;
	flex-wrap: wrap; /* wrap-responsive */
	min-width: 400px; /* wrap-responsive */
}

#entete {
	display: flex;
	flex: 2;
	flex-direction: column;
	justify-content: center;
	padding: 3% 3%;
	background-color: #F2D7D5;
}

#nom {
	font-size: 3.5rem;
}

#poste {
	font-size: 1.5rem;
}

#ligne-poste {
	border-bottom: 0.1rem solid #C0392B;
	width: 4rem;
}

#portrait  {
	flex: 1;
	padding: 3% 1.5%;
	background-color: #C0392B;
	min-width: 200px; /* wrap-responsive */
	/* pourquoi justify-content et align-items "center" ne marchent pas, je ne sais pas ! de fait, utiliser margin auto */
}

#medaillon {
	display: flex; /* tient la hauteur */
	border: rgb(0,0,0,0.33) solid 4px; /* transparence dans le rgb, plutôt qu'un opactity qui a de l'hérédité */
    border-radius: 50%; /* proportion pour un cercle parfait */
	width: 80%; /* prends 80% de portrait */
	margin: auto; /* pour centrer */
}

#portrait img {
	width: 100%; /* prend 100% de medaillon */
	clip-path: circle(50% at center); /* masque d'ecrêtage. empêche l'emploi facile d'un border */
}

/* --------------------- MAIN */
main {
	display: flex;
	text-align: justify;
	flex-direction: row-reverse; /* l'aside est placé après le section dans le html, d'où la nécéssité de les inverser */
	flex-wrap: wrap-reverse; /* wrap-responsive */
	min-width: 400px; /* wrap-responsive */
}

	/* ------------------------------------------  SECTION */
section {
	flex: 2;
	background-color: #F2D7D5;

}

section h1 {
	font-size: 1.5rem;
}

section h2 {
	font-size: 1rem;
}

section article{
	display: flex;
	flex-direction: column;
	padding: 0 6%;
	margin-bottom: -2.5rem;
}

section .paragraphe {
	display: flex;
	align-items: flex-start;
	justify-content: space-between;
	margin: 1rem 0;
}

section .sous-paragraphe {
	flex-basis: 67%;
}

section .date-lieu {
	margin-left: 0.75rem;
}

section .bloc-info {
	display: flex;
	flex-direction: row;
	flex-basis: 34%;
	margin-top: 0.05rem;
}

section .point-cercle {
	margin-top: 0.075rem;
}

section .point {
	margin-top: 0.3rem;
}

.icones-section {
	width: 2rem;
	color: #C0392B;
	margin-right: 1rem;
}

section h2, section h3, section p {
	margin: 0;
	margin-bottom: 3%;
}

.titre-article {
	display: flex;
	margin-top: 2.5rem;
	border-bottom: #C0392B solid 0.1rem;
}

section h1 {
	margin: 0;
}

#recommandations .sous-paragraphe {
	flex-basis: 45%;
	margin-bottom: 10%;
}

#recommandations h2 {
	font-size: 0.8rem;
	margin-bottom: 2%;
}

#recommandations h3 {
	text-transform: capitalize;
	font-size: 0.8rem;
	margin-bottom: 1%;
}

.point {
  height: 0.4rem;
  width: 0.4rem;
  min-height: 0.4rem;
  min-width: 0.4rem;
  background-color: #C0392B;
  border-radius: 50%;
  display: inline-block;
}

.point-cercle {
  height: 0.3rem;
  width: 0.3rem;
  min-height: 0.3rem;
  min-width: 0.3rem;
  background-color: #C0392B;
  border-radius: 50%;
  border: double #F2D7D5 0.3rem;
  display: inline-block;
}

	/* ------------------------------------------  ASIDE */
aside {
	flex: 1;
	display: flex;
	flex-direction: column;
	background-color: #C0392B;
	color: #F2D7D5;
	min-width: 200px; /* wrap-responsive */
}

aside a { /* enlever soulignement et couleur des liens tout en restant cliquable */
	text-decoration: none;
	color: #F2D7D5;
}

aside .paragraphe {
	padding: 0 10%;
}

aside .sous-paragraphe {
	margin-bottom: 6%;
}


aside h1 {
	background-color: #A6ACAF;
	font-size: 1.5rem;
	color: #C0392B;
	text-align: center;
	font-weight: bold;
	padding: 0.25rem; 
}

aside h2 {
	font-size: 0.8rem;
	font-weight: normal;
	margin: 0;
	text-transform: capitalize;
}

aside p {
	margin: 0;
}

aside img {
	width: 20%; /* margin: auto; n'est pas pris en compte */
}

.icones-loisirs {
	width: 15%;
}

article.loisirs {  /*pour que la flexbox aille jusqu'en bas, auto sur l'article "loisirs" */
	flex: auto;
	display: flex;
	align-items: flex-end; /* et ses items commencent en bas */
}

article .bas-page {
	display: flex;
	width: 100%;
	flex-direction: column;
	margin-bottom: 10%;
}

.bas-page .paragraphe {
	display: flex;
	width: 100%;
	padding: 0;
	flex-direction: row;
    justify-content: space-evenly;
}

/* 
problème : les backgrounds
comment faire pour que les backgrounds se retrouvent dans le header alors qu'ils ne devraient s'appliquer qu'aux aside et section ?
solution : diviser le header en deux, en faisant attention aux marges etc pour être bien aligné sur la répartition 2tiers / 1tiers du main, puis appliquer les même backgrounds, au moyen de variable ?

problème : les flex (grow, shrink et basis)
je mettais un flex 1 et flex sur les deux parties côtes à côtes, avec un padding relatif (en%).
hors, je ne comprenais pas pq, le bloc aside semblait avoir un pb de marge suppélementaire : il était légèrement plus grand que le tiers de l'espace.
j'ai d'abords maudit le flex. puis j'ai tenté en poucentage avec un width : suprise, le résultat est le même !
plus j'ai supprimer les padding, et c'est là que j'ai compris le problème : ils étaient en relatifs, et donc calculer par rapport à l'élément parent
tentative 1 : calculer un padding relatif égale pour chaque partie. au moyen de variable ? dans le cas présent : padding décidé x (1/3) = padding variable x (2/3) | donc padding variabe = ((padding décidé x (1/3)) / 2/3 ) | avec 3% on a x = 3% x ((1/3)/2/3) = 1,5% (à écrire 1.5% avec un point);
les poucentages montrent des limites, les padding de aside et section ne font pas la même taille / je ne comprend pas pq le padding augmente la taille du tiers de flex... tout aurait été plus simple ! ;
tentative 2 : est avec box-izing : non-concluant, rien ne change, le width de la flexbox n'est pas pris en compte.
tentative 3 : avec flex grow shrink et basis étonnant, mais inversé, et pas précis.
solution : utilisation des proprité précises de flex recommandées ici : https://developer.mozilla.org/fr/docs/Web/CSS/flex#Syntaxe
insertion du double padding l'aside ;

problème : la police utilisée ne ressemble à aucune de Dafont ou Google Font
tentative 1 : grâce à whatmyfont, j'ai trouvé qu'il s'agissait de Helvetica Neue ; malheureusement, elle est propriétaire et font squirrel refuse de générer une police black listée... donc je la double de Roboto Light.
mais il faut specifier les police avec des font-weight qui ne marchent pas ! je ne sais plus vraiment quoi faire..;

problème : le puces
féfi : ne pas utiliser font awesome.
comment faire des puces ? et des puces avec un cercles autour ? et des puces avec un couleur paramétrable ?
tentative 1 : utilisation d'un border shadow avec un border de la couleur du fond. marche, mais peu élégant : border: solid #F2D7D5 0.1rem;   box-shadow: 0 0 0 0.05rem #C0392B;
solution : border double : marche, en moins de caractère! 

défi : faire un CV entièrement scalable, presque pas besoin de mediaqueries, juste des breakpoints en min-widht et flex-wrap etc.;

ce que j'ai appris : il existe plein de amnière d'aboutir au même résultat ; il faut soit trouver la plus élégante, ou la moins "couteuse"
deux options possibles : soit combiner des class directement dans le html, soit prendre la règle la plus général et la spécifier pour certaines parties : css précis ou hmtl précis;
à utiliser le DevTool pour regarder les marges et les propriétés qui s'appliquent.
avec un flex-box : toujours spécifié un width et un height, c'est souvent de là que viennent les pb...;
*/