#conteneur {
	width:50%;
	margin:auto;
	background-color: red;
	border-color: black;
	flex-wrap: wrap;
	border: green dashed 4px;
}

/* HEADER */
header {
	display: flex;
	flex-direction: row-reverse; /* le "entete" est avant le "portrait", d'où la nécéssité de les inverser */
	width: 100%;
	background-color: green;
}

#entete {
	flex: 2;
	padding: 3%;
	background-color: violet;
}

#portrait  {
	flex: 1;
	padding: 1.5%;
	background-color: yellow;
}

#portrait img {
	width: 80%;
	clip-path: circle(50% at center); 
	display: flex;
	margin : auto;
}

/* MAIN */
main {
	display: flex;
	text-align: justify;
	flex-direction: row-reverse; /* l'aside est placé après le section dans le html, d'où la nécéssité de les inverser */
}

	/* SECTION */
section {
	flex: 2; /* prend 2x plus de place que "aside" */
	padding: 6% 6%; /* vertical puis horizontal*/
	background-color: grey;
} 

	/* ASIDE */
aside {
	flex: 1;
	padding: 6% 6%;
	background-color: orange;
}

aside img {
	width: 20%;
	justify-content:flex-start;
}

/* AUTRES */
h1, h2 {
	text-transform: uppercase;
	text-align: left;
}

/* 
problème : les backgrounds
comment faire pour que les backgrounds se retrouvent dans le header alors qu'ils ne devraient s'appliquer qu'aux aside et section ?
solution : diviser le header en deux, en faisant attention aux marges etc pour être bien aligné sur la répartition 2tiers / 1tiers du main, puis appliquer les même backgrounds, au moyen de variable ?

problème : les flex (grow, shrink et basis)
je mettais un flex 1 et flex sur les deux parties côtes à côtes, avec un padding relatif (en%).
hors, je ne comprenais pas pq, le bloc aside semblait avoir un pb de marge suppélementaire : il était légèrement plus grand que le tiers de l'espace.
j'ai d'abords maudit le flex. puis j'ai tenté en poucentage avec un width : suprise, le résultat est le même !
plus j'ai supprimer les padding, et c'est là que j'ai compris le problème : ils étaient en relatifs, et donc calculer par rapport à l'élément parent
solution : calculer un padding relatif égale pour chaque partie. au moyen de variable ?
dans le cas présent : padding décidé x (1/3) = padding variable x (2/3) | donc padding variabe = ((padding décidé x (1/3)) / 2/3 ) | avec 3% on a x = 3% x ((1/3)/2/3) = 1,5% (à écrire 1.5% avec un point);

problème : le puces
comment faire des puces ? et des puces avec un cercles autour ? et des puces avec un couleur paramétrable ?

défi : faire un CV entièrement scalable, presque pas besoin de mediaqueries, juste des breakpoints en min-widht et flex-wrap etc.;
*/